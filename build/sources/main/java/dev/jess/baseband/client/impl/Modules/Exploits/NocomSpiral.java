package dev.jess.baseband.client.impl.Modules.Exploits;

import dev.jess.baseband.client.api.Main.BaseBand;
import dev.jess.baseband.client.api.Module.Category;
import dev.jess.baseband.client.api.Module.Module;
import dev.jess.baseband.client.api.Settings.Setting;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;

import java.awt.*;

public class NocomSpiral extends Module {
	int spiralX;
	int spiralZ;
	int sx;
	int sz;
	int center_x;
	int center_z;
	int steps;
	boolean isSkipping = false;

	boolean spiralenable = false;

	public NocomSpiral() {
		super("NoCom-Spiral", "Spiral Block Hit Packets=Block Game Radar...", Category.EXPLOITS, new Color(3, 4, 112, 255).getRGB());
		BaseBand.settingsManager.rSetting(new Setting("Speed", this, 1, 1, 8, true));
	}


	public void enable() {
		if (mc.player == null) {
			return;
		}

		this.spiralX = 0;
		this.spiralZ = 0;

		center_x = 0;
		center_z = 0;


		this.steps = 16;
		this.isSkipping = false;
	}


	public void tick() {
		onUpdate();
	}


	public void onUpdate() {
		if (mc.player.connection == null) {
			return;
		}
		for (int i = 0; i < BaseBand.settingsManager.getSettingByName(this, "Speed").getValDouble(); ++ i) {
			this.sx = this.spiralX + this.center_x;
			this.sz = this.spiralZ + this.center_z;
			this.setMcHudMeta("X: " + this.sx + " Z:" + this.sz);
			mc.player.connection.sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.ABORT_DESTROY_BLOCK, new BlockPos(this.sx, 0, this.sz), EnumFacing.UP));
			if (this.isSkipping) {
				if (Math.abs(this.spiralX) < Math.abs(this.spiralZ) && (this.spiralX != this.spiralZ || this.spiralX >= 0)) {
					this.spiralX += this.spiralZ >= 0 ? this.steps : - this.steps;
				} else {
					this.spiralZ += this.spiralX >= 0 ? - this.steps : this.steps;
				}
			} else if (Math.abs(this.spiralX) <= Math.abs(this.spiralZ) && (this.spiralX != this.spiralZ || this.spiralX >= 0)) {
				this.spiralX += this.spiralZ >= 0 ? this.steps : - this.steps;
			} else {
				this.spiralZ += this.spiralX >= 0 ? - this.steps : this.steps;
			}
			if (0 < this.steps || this.spiralX <= 0) continue;
			this.spiralX = 0;
			this.spiralZ = 0;
		}
	}
}
