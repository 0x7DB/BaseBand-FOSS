package dev.jess.baseband.client.impl.Modules.Exploits;

import dev.jess.baseband.client.api.Main.BaseBand;
import dev.jess.baseband.client.api.Module.Category;
import dev.jess.baseband.client.api.Module.Module;
import dev.jess.baseband.client.api.Settings.Setting;
import dev.jess.baseband.client.api.Utils.ChatUtil;
import net.minecraft.item.*;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.EnumHand;

import java.awt.*;

public class FastProjectile extends Module {


	private final Setting bows = new Setting("Bows", this, true);

	private final Setting eggs = new Setting("Eggs", this, true);
	private final Setting pearls = new Setting("Pearls", this, true);
	private final Setting snowballs = new Setting("SnowBalls", this, true);
	private final Setting timeOut = new Setting("Delay", this, 5000, 100, 20000, true);
	private final Setting spoofs = new Setting("Power", this, 10, 1, 300, true);
	private final Setting debug = new Setting("Debug", this, false);

	private final Setting bounds = new Setting("Constrict", this, false);


	private long lastShootTime;


	public FastProjectile() {
		super("FastProjectile", "description", Category.EXPLOITS, new Color(255, 222, 71, 255).getRGB());
		BaseBand.settingsManager.rSetting(bows);
		BaseBand.settingsManager.rSetting(eggs);
		BaseBand.settingsManager.rSetting(pearls);
		BaseBand.settingsManager.rSetting(snowballs);
		BaseBand.settingsManager.rSetting(timeOut);
		BaseBand.settingsManager.rSetting(spoofs);
		BaseBand.settingsManager.rSetting(debug);
		BaseBand.settingsManager.rSetting(bounds);
	}


	public boolean onPacketSend(Packet<?> packet) {
		if (packet.getClass() == CPacketPlayerDigging.class) {

			if (((CPacketPlayerDigging) packet).getAction() == CPacketPlayerDigging.Action.RELEASE_USE_ITEM) {
				ItemStack handStack = mc.player.getHeldItem(EnumHand.MAIN_HAND);

				if (! handStack.isEmpty() && handStack.getItem() != null && handStack.getItem() instanceof ItemBow && bows.getValBoolean()) {
					doSpoofs();
					if (debug.getValBoolean()) ChatUtil.sendChatMsg("Spoofing");
				}
			}

		} else if (packet.getClass() == CPacketPlayerTryUseItem.class) {
			CPacketPlayerTryUseItem packet2 = (CPacketPlayerTryUseItem) packet;

			if (packet2.getHand() == EnumHand.MAIN_HAND) {
				ItemStack handStack = mc.player.getHeldItem(EnumHand.MAIN_HAND);

				if (! handStack.isEmpty() && handStack.getItem() != null) {
					if (handStack.getItem() instanceof ItemEgg && eggs.getValBoolean()) {
						doSpoofs();
					} else if (handStack.getItem() instanceof ItemEnderPearl && pearls.getValBoolean()) {
						doSpoofs();
					} else if (handStack.getItem() instanceof ItemSnowball && snowballs.getValBoolean()) {
						doSpoofs();
					}
				}
			}
		}
		if (mc.player != null && mc.world != null) {
			float yaw = mc.player.rotationYaw;
			if (packet.getClass() == CPacketPlayerTryUseItem.class && mc.player.getHeldItemMainhand().getItem() instanceof ItemBow) {
				mc.player.connection.sendPacket(new CPacketPlayer.PositionRotation(
						mc.player.posX - Math.sin(yaw) * 4,
						mc.player.posY + 5,
						mc.player.posZ + Math.cos(yaw) * 4,
						mc.player.rotationYaw,
						mc.player.rotationPitch,
						false
				));
			}
		}


		return false;
	}

	public void tick(){
		if (System.currentTimeMillis() - lastShootTime >= timeOut.getValDouble()) {
			this.setMcHudMeta("Charged");
		}else{
			this.setMcHudMeta("Charging");
		}
	}

	private void doSpoofs() {
		if (System.currentTimeMillis() - lastShootTime >= timeOut.getValDouble()) {
			lastShootTime = System.currentTimeMillis();

			mc.player.connection.sendPacket(new CPacketEntityAction(mc.player, CPacketEntityAction.Action.START_SPRINTING));


			for (int index = 0; index < spoofs.getValDouble(); ++ index) {
				mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 1e-10, mc.player.posZ, false));
				mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY - 1e-10, mc.player.posZ, true));
				if(bounds.getValBoolean()){
					mc.getConnection().sendPacket((Packet)new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 1339.2, mc.player.posZ, false));
				}
			}


			if (debug.getValBoolean()) ChatUtil.sendChatMsg("Spoofed");
		}
	}


}
