package dev.jess.baseband.client.impl.Modules.Exploits;

import dev.jess.baseband.client.api.Module.Category;
import dev.jess.baseband.client.api.Module.Module;
import net.minecraft.block.Block;
import net.minecraft.block.BlockChest;
import net.minecraft.block.BlockShulkerBox;
import net.minecraft.client.gui.inventory.GuiContainer;
import net.minecraft.client.gui.inventory.GuiShulkerBox;
import net.minecraft.init.Blocks;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;

import java.awt.*;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChestAura extends Module {
    public ChestAura() {
        super("ChestAura", "description", Category.EXPLOITS, new Color(170, 241, 163,255).getRGB());
    }

    public boolean inShulker;
    public HashMap<BlockPos, Integer> openedShulkers = new HashMap<BlockPos, Integer>();

    public void tick() {
        final HashMap<BlockPos, Integer> tempShulkers = new HashMap<BlockPos, Integer>(openedShulkers);
        for (final Map.Entry<BlockPos, Integer> e : openedShulkers.entrySet()) {
            if (e.getValue() <= 0) {
                tempShulkers.remove(e.getKey());
            }
            tempShulkers.replace(e.getKey(), e.getValue() - 1);
        }
        openedShulkers.clear();
        openedShulkers.putAll(tempShulkers);
        if (mc.currentScreen instanceof GuiContainer && !(mc.currentScreen instanceof GuiShulkerBox)) {
            return;
        }
        if (mc.currentScreen instanceof GuiShulkerBox) {
            if (inShulker) {
                mc.displayGuiScreen(null);
            }
            inShulker = false;
            return;
        }
        for (int x = -4; x <= 4; ++x) {
            for (int y = -4; y <= 4; ++y) {
                for (int z = -4; z <= 4; ++z) {
                    final BlockPos pos = mc.player.getPosition().add(x, y, z);
                    if (mc.world.getBlockState(pos).getBlock() instanceof BlockShulkerBox || mc.world.getBlockState(pos).getBlock() instanceof BlockChest) {
                            if (!openedShulkers.containsKey(pos)) {
                                if (mc.player.getPositionVector().distanceTo(new Vec3d(pos).add(0.5, 0.5, 0.5)) <= 5.25) {
                                    openBlock(pos);
                                    openedShulkers.put(pos, 300);
                                    inShulker = true;
                                    return;
                                }
                            }
                    }
                }
            }
        }
    }


    public static List<Block> emptyBlocks = Arrays.asList(Blocks.AIR, Blocks.FLOWING_LAVA, Blocks.LAVA, Blocks.FLOWING_WATER, Blocks.WATER, Blocks.VINE, Blocks.SNOW_LAYER, Blocks.TALLGRASS, Blocks.FIRE);;
    public static void openBlock(final BlockPos pos) {
        for (final EnumFacing f : EnumFacing.values()) {
            final Block neighborBlock = mc.world.getBlockState(pos.offset(f)).getBlock();
            if (emptyBlocks.contains(neighborBlock)) {
                mc.playerController.processRightClickBlock(mc.player, mc.world, pos, f.getOpposite(), new Vec3d(pos), EnumHand.MAIN_HAND);
                return;
            }
        }
    }


}
